/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/store lazy recursive ^\\.\\/.*\\.json$":
/*!****************************************************************!*\
  !*** ./src/store/ lazy ^\.\/.*\.json$ strict namespace object ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var map = {\n\t\"./en.json\": [\n\t\t\"./src/store/en.json\",\n\t\t\"src_store_en_json\"\n\t],\n\t\"./es.json\": [\n\t\t\"./src/store/es.json\",\n\t\t\"src_store_es_json\"\n\t],\n\t\"./fr.json\": [\n\t\t\"./src/store/fr.json\",\n\t\t\"src_store_fr_json\"\n\t],\n\t\"./ja.json\": [\n\t\t\"./src/store/ja.json\",\n\t\t\"src_store_ja_json\"\n\t],\n\t\"./nl.json\": [\n\t\t\"./src/store/nl.json\",\n\t\t\"src_store_nl_json\"\n\t],\n\t\"./ru.json\": [\n\t\t\"./src/store/ru.json\",\n\t\t\"src_store_ru_json\"\n\t],\n\t\"./zh.json\": [\n\t\t\"./src/store/zh.json\",\n\t\t\"src_store_zh_json\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./src/store lazy recursive ^\\\\.\\\\/.*\\\\.json$\";\nmodule.exports = webpackAsyncContext;\n\n//# sourceURL=webpack://gulp/./src/store/_lazy_^\\.\\/.*\\.json$_strict_namespace_object?");

/***/ }),

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/html.js */ \"./src/js/modules/html.js\");\n/* harmony import */ var _modules_loadLang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/loadLang.js */ \"./src/js/modules/loadLang.js\");\n\n\n\nlet systemLanguage = window.navigator.language;\nsystemLanguage = systemLanguage.slice(0, 2).toLowerCase();\n\nconst query = window.location.search.slice(1);\nlet queryParams = new URLSearchParams(query);\n\nlet lang = \"en\";\nlet langs = [\"en\", \"es\", \"fr\", \"ja\", \"nl\", \"ru\", \"zh\"];\n\nif (queryParams.has(\"lang\")) {\n  lang = queryParams.get(\"lang\");\n} else {\n  lang = systemLanguage;\n  queryParams.set(\"lang\", lang);\n  history.pushState(\n    null,\n    \"\",\n    `${window.location.pathname}?${queryParams.toString()}`\n  );\n}\ndocument.documentElement.setAttribute(\"lang\", lang);\n\nif (!langs.includes(lang)) {\n  lang = \"en\";\n}\n\n(0,_modules_loadLang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(lang).then((data) => {\n  _modules_html_js__WEBPACK_IMPORTED_MODULE_0__.dataParseBody(data);\n  _modules_html_js__WEBPACK_IMPORTED_MODULE_0__.dataParseHeader(data);\n  _modules_html_js__WEBPACK_IMPORTED_MODULE_0__.dataParseFooter(data);\n});\n\n\n//# sourceURL=webpack://gulp/./src/js/app.js?");

/***/ }),

/***/ "./src/js/modules/html.js":
/*!********************************!*\
  !*** ./src/js/modules/html.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dataParseBody\": () => (/* binding */ dataParseBody),\n/* harmony export */   \"dataParseFooter\": () => (/* binding */ dataParseFooter),\n/* harmony export */   \"dataParseHeader\": () => (/* binding */ dataParseHeader)\n/* harmony export */ });\nfunction dataParseBody(data) {\n  window.addEventListener(\"load\", function () {\n    const monthlyStyle = document.getElementById(\"monthlyStyle\");\n    const annualyStyle = document.getElementById(\"annualyStyle\");\n    const btnContinueHandler = document.getElementById(\"btnContinueHandler\");\n    const windowSize = document.getElementById(\"windowSize\");\n    let currentWidthWindow = document.documentElement.clientWidth;\n    let currentHeightWindow = document.documentElement.clientHeight;\n    let link;\n\n    monthlyStyle.addEventListener(\"click\", () => {\n      if (monthlyStyle.className === \" active\") {\n        monthlyStyle.className.replace(\"monthly\");\n        btnContinueHandler.setAttribute(\"disabled\", \"\");\n      } else {\n        monthlyStyle.className.replace(\" active\");\n        link = \"https://apple.com/\";\n        btnContinueHandler.removeAttribute(\"disabled\");\n      }\n    });\n\n    annualyStyle.addEventListener(\"click\", () => {\n      if (annualyStyle.className === \" active\") {\n        annualyStyle.className.replace(\"annualy\");\n        btnContinueHandler.setAttribute(\"disabled\", \"\");\n      } else {\n        annualyStyle.className.replace(\" active\");\n        link = \"https://google.com/\";\n        btnContinueHandler.removeAttribute(\"disabled\");\n      }\n    });\n\n    btnContinueHandler.addEventListener(\"click\", () => {\n      document.location.href = link;\n    });\n\n    function displayWindowSize() {\n      let size = currentWidthWindow * 0.08;\n      console.log((windowSize.style.fontSize = `${size}px`));\n    }\n\n    window.addEventListener(\"resize\", displayWindowSize);\n\n    displayWindowSize();\n  });\n\n  let html = (document.getElementById(\"htmlBody\").innerHTML = `\n    <div id='windowSize' class=\"banner__body banner-body\">\n        <div class=\"banner-body__content\">\n            <div class=\"banner-body__title\">\n                <span class=\"title\">\n                    ${data[\"Unlimited Access<br>to All Features\"]}\n                </span>\n            </div>\n            <div class=\"banner-body__items\">\n                <div class=\"banner-body__item\">\n                    <img\n                        class=\"banner-body__item__img\"\n                        src='img/unlimitedDocs.svg'\n                        alt=\"\"\n                    />\n                    <span class=\"banner-body__item__description\">\n                        ${data[\"Unlimited documents\"]}\n                    </span>\n                </div>\n                <div class=\"banner-body__item\">\n                    <img class=\"banner-body__item__img\" \n                        src=\"img/export.svg\" alt=\"\" \n                    />\n                    <span class=\"banner-body__item__description\">\n                            ${data[\"Count mode\"]}\n                    </span>\n                </div>\n                <div class=\"banner-body__item\">\n                    <img class=\"banner-body__item__img\" src=\"img/noAds.svg\" alt=\"\" />\n                        <span class=\"banner-body__item__description\">\n                            ${data[\"Text recognition (OCR)\"]}\n                        </span>\n                </div>\n            </div>\n    </div>\n    <div class=\"banner-body__subscription\">\n      <div id='monthlyStyle' class=\"monthly\">\n            <div class=\"subscriptionImg\">\n                <img src=\"img/shape-1.svg\" alt=\"\" />\n            </div>\n            <span class='subscriptionTitle'>\n                ${data[\"Monthly\"]}\n            </span>\n            <span class='subscriptionPrice'>\n                ${data[`<strong>{{price}}</strong><br>per month`].replace(\n                  \"{{price}}\",\n                  \"$9.99\"\n                )}\n            </span>\n            <div class='subscriptionInfo'>\n                ${data[`3 DAYS FREE`]}\n            </div>\n            <span class='subscriptionSecondPrice'>\n                ${data[`{{price}}/month`].replace(\"{{price}}\", \"$9.99\")}\n            </span>\n      </div>\n      <div id='annualyStyle' class=\"annualy\">\n            <div class=\"subscriptionImg\">\n                <img  src=\"img/shape-2.svg\" alt=\"\" />\n            </div>\n            <div class=\"discount\">\n                ${data[\"-83%\"]}\n            </div>\n            <span class='subscriptionTitle'>\n                ${data[\"Annually\"]}\n            </span>\n            <span class='subscriptionPrice'>\n                ${data[`<strong>{{price}}</strong><br>per year`].replace(\n                  \"{{price}}\",\n                  \"$19.99\"\n                )}\n            </span>\n            <div class='subscriptionInfo'>\n                ${data[`MOST POPULAR`]}\n            </div>\n            <span class='subscriptionSecondPrice'>\n                ${data[`{{price}}/month`].replace(\"{{price}}\", \"$1.99\")}\n            </span>\n      </div>\n    </div>\n    <button class='banner-body__btnContinue' disabled id='btnContinueHandler'>\n        ${data[`Continue`]}\n    </button>\n  </div>\n                `);\n  return html;\n}\n\nfunction dataParseHeader(data) {\n  let html = (document.getElementById(\"htmlHeader\").innerHTML = `\n  <div class=\"banner__header banner-header\">\n        <div class=\"banner-header__close\">\n            <a class=\"banner-header__link\" href='#'>\n                <span class=\"close\"></span>\n            </a>\n        </div>\n        <div class=\"banner-header__restore\">\n            <a class=\"banner-header__link\" href='#'>\n                <span class=\"restore\">\n                    ${data[\"Restore\"]}\n                </span>\n            </a>\n        </div>\n        </div>\n                  `);\n  return html;\n}\n\nfunction dataParseFooter(data) {\n  let html = (document.getElementById(\"htmlFooter\").innerHTML = `\n    \n    <div class=\"banner__footer banner-footer\">\n    <span class='banner-footer_notification'>\n        ${data[\"Auto-renewable. Cancel anytime.\"]}\n    </span>\n         <div class='banner-footer_links'>\n            <a class='' href='#'>\n                ${data[\"Terms of Use\"]}\n            </a>\n            <a class='' href='#'>\n                ${data[\"Privacy Policy\"]}\n            </a>\n         </div\n    </div>\n                    `);\n  return html;\n}\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/html.js?");

/***/ }),

/***/ "./src/js/modules/loadLang.js":
/*!************************************!*\
  !*** ./src/js/modules/loadLang.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nlet loadLang = async (language) => {\n  let data = await __webpack_require__(\"./src/store lazy recursive ^\\\\.\\\\/.*\\\\.json$\")(`./${language}.json`);\n  return data.default;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (loadLang);\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/loadLang.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	(() => {
/******/ 		var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));
/******/ 			}
/******/ 			def['default'] = () => (value);
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".app.min.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "gulp:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			;
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkgulp"] = self["webpackChunkgulp"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;